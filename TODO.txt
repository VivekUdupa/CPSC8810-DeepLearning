1) Change image size to 300
2) CNN layer 1 specs -> in_channel = 1, out_channel=16, stride = 1, padding = 1, kernel = 3
3) CNN layer 2 specs -> in_channel = 16, out_channel=32, stride = 1, padding = 1, kernel = 3
4) max pooling 1 and 2 -> kernel_size = 2

layer 1
-------
300x300 image -> 302x302 after padding=1 -> 300x300 after conv1 -> 150x150 after max pooling 1(stride = 2).
in channel = 1(Grayscale), out channel = 16(16 feature maps)

layer 2
-------
150x150 image -> 152x152 after padding=1 -> 150x150 after conv2 -> 75x75 after max pool 2(Stride = 2).
in channel = 16, out channel = 32

layer 3 (Fully Connected layer)
-------------------------------
final output = 9 categories
input = 32 channels x 75x75 image pixels ( output of layer 2)

Feb 16th
--------
1) Accuracy 100% at some epoch, rest 0%. Figure out why?
2) Select a proper dataset
3) Images gossiping0277 and gossiping0251 were not in .jpg. it was in webp format, should we fix it? 
4) what is batch_size? how is it helpful?

Note:
-----
Test data fixed(almost): Make different folders for different categories of test images. The algorithm will try to predict based on the training images. prediction = 0 -> category 0(gossiping) and so on

5) Encode labels to categories and display the results better

6) Make the code run on GPU

Feb 28
--------

1) Make outputs as pure string

2) Modify code to take test image as command line arguement

3) How to save and export model
 
